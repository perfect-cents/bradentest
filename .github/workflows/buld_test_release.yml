name: Build, test, and release

on:
  workflow_dispatch:
  pull_request:
    types: [opened, reopened, synchronize]
  push:
    branches: [main, next]

env:
  ENVIRONMENT: build
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  test_push:
    name: Test Push
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/cache@v3
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}

      - name: Create report file
        run: date +%s > report.txt
      - run: git config user.email ${{ github.actor }}@users.noreply.github.com
      - run: git config user.name ${{ github.actor }}
      - run: git add report.txt
      - run: git commit -m "Automated report"
      - run: git push

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup
        uses: ./.github/actions/setup

      - name: Build
        run: yarn build

      - uses: actions/cache@v3
        id: cache-build
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}

  # lint:
  #   name: Lint
  #   runs-on: ubuntu-latest
  #   needs: [build]
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Setup
  #       uses: ./.github/actions/setup

  #     - name: Lint
  #       run: yarn lint

  # test:
  #   name: Test
  #   runs-on: ubuntu-latest
  #   needs: [build]
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Setup
  #       uses: ./.github/actions/setup

  #     - name: Test
  #       run: yarn test

  # release:
  #   name: Release
  #   runs-on: ubuntu-latest
  #   if: ${{ github.event_name != 'pull_request' }}
  #   needs: [build, lint, test]
  #   steps:
  #     - uses: actions/cache@v3
  #       id: restore-build
  #       with:
  #         path: ./*
  #         key: ${{ github.sha }}-${{ github.run_number }}

  #     - name: Configure NPM Access Token
  #       run: yarn config set 'npmAuthToken' "${{ secrets.NPM_TOKEN }}"

  #     - name: Ensure Valid Versioning
  #       run: yarn version check

  #     # - run: git remote set-url origin https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
  #     - run: git config user.email ${{ github.actor }}@users.noreply.github.com
  #     - run: git config user.name ${{ github.actor }}

  #     - name: Release
  #       run: yarn workspaces foreach --verbose --no-private --topological-dev run release

  #     - run: git push
