name: Test, and deploy

on:
  workflow_dispatch:
    inputs:
      title:
        type: string
        description: Title
        required: false
      upstreamCommit:
        type: string
        description: Upstream commit
        required: false
      deployIdentity:
        type: boolean
        description: Deploy identity
        required: true
        default: false
      deployDashboard:
        type: boolean
        description: Deploy dashboard
        required: true
        default: false
      deployExample:
        type: boolean
        description: Deploy example
        required: true
        default: false
      deployHydraPublic:
        type: boolean
        description: Deploy hydra public
        required: true
        default: false
      deployHydraAdmin:
        type: boolean
        description: Deploy hydra admin
        required: true
        default: false

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  PROJECT_ID: ${{ fromJSON('{"main":"unstoppable-domains","staging":"unstoppable-domains-staging"}')[github.head_ref || github.ref_name] }}
  NEXT_PUBLIC_APP_ENV: ${{ fromJSON('{"main":"production","staging":"staging"}')[github.head_ref || github.ref_name] }}

jobs:
  get_commit:
    name: Get Commit
    runs-on: ubuntu-latest
    outputs:
      commit: ${{ steps.ancestor.outputs.commit || github.sha }}
      isProduction: ${{ github.ref_name == 'main' }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - if: github.event.inputs.upstreamCommit
        run: |-
          git merge-base --is-ancestor ${{ github.event.inputs.upstreamCommit }} HEAD
          echo ::set-output name=commit::$(git rev-parse ${{ github.event.inputs.upstreamCommit }})
      - run: |-
          PREFIX=${{  github.ref_name == 'main' && 'production' || 'staging' }}
          SHORT_SHA=$(git rev-parse --short ${{ steps.ancestor.outputs.commit || github.sha }})
          DATE=$(date +%Y.%b.%d | cut -b 3- | tr '[:upper:]' '[:lower:]')
          SLUG=$(echo "${{ github.event.inputs.title }}" | iconv -t ascii//TRANSLIT | sed -r s/[^a-zA-Z0-9]+/-/g | sed -r s/^-+\|-+\$//g | tr A-Z a-z       )

          echo title ${{ github.event.inputs.title }} "${{ github.event.inputs.title }}" '${{ github.event.inputs.title }}'

          echo PREFIX $PREFIX
          echo SHORT_SHA $SHORT_SHA
          echo DATE $DATE
          echo SLUG $SLUG


          echo "$PREFIX/$SHORT_SHA/$DATE/$SLUG" -m "${{ github.event.inputs.title }}"
